// utils/nicknameGenerator.ts
/**
 * 한국어 형용사 + 명사 조합으로 랜덤 닉네임 생성
 * 최대 6자 제한
 */

// 2-4자 형용사 목록 (대폭 확장)
const adjectives = [
  // 성격/감정 관련
  '귀여운', '멋진', '예쁜', '착한', '똑똑한', '용감한', '조용한', '활발한', '친절한', '성실한',
  '차분한', '건강한', '따뜻한', '시원한', '달콤한', '부드러운', '단단한', '새로운', '오래된', '깨끗한',
  '재미있는', '슬픈', '기쁜', '화난', '평화로운', '신비로운', '우아한', '강한', '약한', '빠른',
  '느린', '작은', '큰', '밝은', '어두운', '높은', '낮은', '뜨거운', '차가운', '무거운',
  '가벼운', '길쭉한', '둥근', '네모난', '예리한', '둔한', '매끄러운', '거친', '투명한', '불투명한',
  
  // 색깔 관련  
  '빨간', '파란', '노란', '초록', '보라', '주황', '검은', '하얀', '회색', '분홍',
  '갈색', '금색', '은색', '무지개', '알록달록한', '투명한', '반짝이는', '빛나는', '어둠침침한', '환한',
  
  // 날씨/자연 관련
  '햇살', '달빛', '별빛', '바람', '구름', '비', '눈', '번개', '천둥', '무지개',
  '봄', '여름', '가을', '겨울', '아침', '저녁', '밤', '새벽', '황혼', '정오',
  
  // 감각 관련
  '달콤한', '쓴', '매운', '신', '짠', '고소한', '향기로운', '냄새나는', '맛있는', '맛없는',
  '부드러운', '딱딱한', '말랑한', '쫄깃한', '바삭한', '촉촉한', '건조한', '축축한', '미끄러운', '끈적한',
  
  // 특별한 형용사들
  '마법의', '환상적인', '놀라운', '신기한', '특별한', '평범한', '독특한', '흔한', '희귀한', '소중한',
  '값진', '저렴한', '비싼', '무료의', '귀한', '흔한', '레어한', '레전드', '에픽', '노말',
  '완벽한', '불완전한', '이상한', '정상적인', '비정상적인', '특이한', '일반적인', '특수한', '기본적인', '고급스러운'
];

// 2-4자 명사 목록 (대폭 확장)
const nouns = [
  // 동물
  '고양이', '강아지', '토끼', '사자', '호랑이', '펭귄', '여우', '늑대', '다람쥐', '햄스터',
  '판다', '코끼리', '기린', '얼룩말', '캥거루', '코알라', '돌고래', '고래', '상어', '거북이',
  '나비', '벌', '새', '독수리', '까치', '참새', '비둘기', '올빼미', '앵무새', '백조',
  '원숭이', '곰', '사슴', '말', '소', '돼지', '양', '염소', '닭', '오리',
  '거위', '칠면조', '물고기', '금붕어', '잉어', '연어', '참치', '문어', '오징어', '게',
  '새우', '조개', '굴', '전복', '해파리', '불가사리', '산호', '해마', '바다표범', '바다사자',
  
  // 자연/환경
  '별', '달', '해', '구름', '바람', '비', '눈', '번개', '무지개', '바다',
  '산', '강', '호수', '숲', '꽃', '나무', '잎', '열매', '씨앗', '뿌리',
  '하늘', '땅', '돌', '바위', '모래', '흙', '진흙', '얼음', '서리', '이슬',
  '폭포', '계곡', '동굴', '절벽', '언덕', '평야', '사막', '정글', '초원', '습지',
  
  // 음식
  '사과', '바나나', '딸기', '포도', '오렌지', '복숭아', '배', '감', '귤', '수박',
  '참외', '메론', '키위', '망고', '파인애플', '레몬', '라임', '체리', '블루베리', '라즈베리',
  '빵', '쿠키', '케이크', '파이', '도넛', '마카롱', '초콜릿', '사탕', '젤리', '아이스크림',
  '피자', '햄버거', '샌드위치', '파스타', '라면', '우동', '냉면', '비빔밥', '김치', '김밥',
  
  // 사물/도구
  '펜', '연필', '지우개', '책', '노트', '가방', '신발', '모자', '안경', '시계',
  '컴퓨터', '핸드폰', '태블릿', '키보드', '마우스', '모니터', '스피커', '헤드폰', '카메라', '텔레비전',
  '자동차', '버스', '지하철', '비행기', '배', '기차', '자전거', '오토바이', '스쿠터', '킥보드',
  
  // 장소
  '집', '학교', '회사', '병원', '마트', '공원', '놀이터', '도서관', '카페', '식당',
  '영화관', '박물관', '미술관', '체육관', '수영장', '해변', '산책로', '광장', '시장', '백화점',
  
  // 게임/엔터테인먼트
  '게임', '영화', '음악', '노래', '춤', '그림', '사진', '소설', '만화', '애니메이션',
  '스포츠', '축구', '야구', '농구', '배구', '테니스', '배드민턴', '탁구', '골프', '수영',
  
  // 직업/역할
  '선생님', '의사', '간호사', '요리사', '화가', '가수', '작가', '개발자', '디자이너', '경찰',
  '소방관', '파일럿', '운전사', '농부', '어부', '목수', '기계공', '전기공', '배관공', '청소부',
  
  // 감정/추상개념
  '사랑', '우정', '희망', '꿈', '행복', '평화', '자유', '정의', '용기', '지혜',
  '인내', '성실', '정직', '친절', '배려', '존중', '감사', '미소', '웃음', '눈물',
  
  // 보석/광물
  '다이아몬드', '루비', '사파이어', '에메랄드', '진주', '황금', '은', '구리', '철', '백금',
  '수정', '자수정', '황수정', '로즈쿼츠', '터키석', '호박', '산호', '진주', '옥', '마노'
];

/**
 * 랜덤 닉네임 생성 함수
 * @param maxLength 최대 길이 (기본값: 10)
 * @returns 생성된 닉네임
 */
export function generateRandomNickname(maxLength: number = 15): string {
  let attempts = 0;
  const maxAttempts = 50;
  
  while (attempts < maxAttempts) {
    const adjective = adjectives[Math.floor(Math.random() * adjectives.length)] || '멋진';
    const noun = nouns[Math.floor(Math.random() * nouns.length)] || '사자';
    const nickname = adjective + noun;
    
    if (nickname.length <= maxLength) {
      return nickname;
    }
    
    attempts++;
  }
  
  // 모든 시도가 실패한 경우 짧은 조합 강제 생성
  const shortAdjectives = adjectives.filter(adj => adj.length <= 2);
  const shortNouns = nouns.filter(noun => noun.length <= 3);
  
  const adjective = shortAdjectives[Math.floor(Math.random() * shortAdjectives.length)] || '멋진';
  const noun = shortNouns[Math.floor(Math.random() * shortNouns.length)] || '사자';
  
  return (adjective + noun).substring(0, maxLength);
}

/**
 * 닉네임 유효성 검사
 * @param nickname 검사할 닉네임
 * @param maxLength 최대 길이 (기본값: 10)
 * @returns 유효성 검사 결과
 */
export function validateNickname(nickname: string, maxLength: number = 15): {
  isValid: boolean;
  error?: string;
} {
  if (!nickname || nickname.trim().length === 0) {
    return {
      isValid: false,
      error: '닉네임을 입력해주세요.'
    };
  }
  
  const trimmed = nickname.trim();
  
  if (trimmed.length > maxLength) {
    return {
      isValid: false,
      error: `닉네임은 ${maxLength}자 이하여야 합니다.`
    };
  }
  
  if (trimmed.length < 1) {
    return {
      isValid: false,
      error: '닉네임은 최소 1자 이상이어야 합니다.'
    };
  }
  
  // 특수문자 검사 (한글, 영문, 숫자만 허용)
  const allowedPattern = /^[가-힣a-zA-Z0-9\s]+$/;
  if (!allowedPattern.test(trimmed)) {
    return {
      isValid: false,
      error: '닉네임은 한글, 영문, 숫자만 사용할 수 있습니다.'
    };
  }
  
  return {
    isValid: true
  };
}

/**
 * 여러 개의 랜덤 닉네임 생성 (중복 제거)
 * @param count 생성할 개수
 * @param maxLength 최대 길이
 * @returns 중복 제거된 닉네임 배열
 */
export function generateMultipleNicknames(count: number = 5, maxLength: number = 15): string[] {
  const nicknames = new Set<string>();
  
  while (nicknames.size < count) {
    const nickname = generateRandomNickname(maxLength);
    nicknames.add(nickname);
  }
  
  return Array.from(nicknames);
}